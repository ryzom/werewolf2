Potential python problems:
	* Exposing mutable C++ basic types to python (float*, int* etc)
		C++:
			float something = 10;
			float* getSomething() {	
				return &something;
			}
		Python:
			a = getSomething()
			a++
		C++:
		something should be 11?

	* Getting mutable python basic types into C++ (float*, int* etc)
		C++:
			void modifyFloat(float* something) {
				*something += ..;
				...
			}
		Python:
			a = 10
			modifyFloat(a)
			a
		modified a?
		
	* Exposing function pointers - transporting C++ function pointers in python.
		C++:
			typedef int (*func)(void) intFunc;
			intFunc getSomeFunction() {
				...
			}
			void useIntFunction(intFunc function) {
				...
			}
		Python:
			a = getSomeFunction()
			useIntFunction(a)
		How to do this?
				
	* How do you take ownership of a pointer created in python in C++ if there is inheritance involved?
		C++:
			class Base {
				virtual doSomething() = 0;
			};

			class BaseWrap : public Base, public wrapper<Base> {
				...
			};

			class Derived : public Base {
				...
			};

			class User {
				User() {
					m_something = NULL;
				}

				~User() {
					if(m_something != NULL)
						delete m_something;
				}

				void takeSomethingOver(Base* something) {
					if(m_something != NULL)
						delete m_something;
					m_something = something;	
				}
				Base* m_something;
			};
		Python:
			a = User()
			a.takeSomethingOver(Derived())
		How to do this?
global proc wwGUITransferVFNormals() {
	$win = "wwGUITransferVFNormalsWin";
	if(`window -exists $win`)
		deleteUI $win;
	
	wwCreateTransferVFNormalsWin $win;
	wwCreateTransferVFNormalsCB $win;

	showWindow $win;
}

// register callbacks
global proc wwCreateTransferVFNormalsCB(string $win) {
	button -e -c "wwTransferVFNormalsGetFrom" wwTransferVFNormalsFromButton;
	button -e -c "wwTransferVFNormalsGetTo" wwTransferVFNormalsToButton;
	button -e -c ("deleteUI " + $win) wwTransferVFNormalsCloseButton;
	button -e -c "wwTransferVFNormalsClear" wwTransferVFNormalsClearButton;
	button -e -c "wwTransferVFNormalsApply" wwTransferVFNormalsApplyButton;
	button -e -c ("wwTransferVFNormalsApply;"+"deleteUI " + $win + ";") wwTransferVFNormalsTransferButton;
}

global proc wwTransferVFNormalsGetFrom() {
	string $sel[] = `ls -sl`;
	textField -e -tx `stringArrayToString $sel " "` wwTransferVFNormalsFrom;
}

global proc wwTransferVFNormalsGetTo() {
	string $sel[] = `ls -sl`;
	textField -e -tx `stringArrayToString $sel " "` wwTransferVFNormalsTo;
}

global proc wwTransferVFNormalsClear() {
	textField -e -tx "" wwTransferVFNormalsFrom;
	textField -e -tx "" wwTransferVFNormalsTo;	
}

global proc wwTransferVFNormalsApply() {
	string $fromString = `textField -q -tx wwTransferVFNormalsFrom`;
	string $toString = `textField -q -tx wwTransferVFNormalsTo`;
	string $from[] = `stringToStringArray $fromString  " "`;
	string $to[] = `stringToStringArray $toString  " "`;
	float $threshold = `floatSliderGrp -q -v wwTransferVFNormalsThreshold`;
	wwModifyTransferVFNormals $from $to $threshold;
}

// create the actual GUI
global proc wwCreateTransferVFNormalsWin(string $win) {
	window -t "Transfer Vertex Face Normals" $win;
	$f = `formLayout -nd 100`;
	setParent $f;
	$transferButton = `button -l "Transfer" wwTransferVFNormalsTransferButton`;
	$applyButton = `button -l  "Apply" wwTransferVFNormalsApplyButton`;
	$closeButton = `button -l  "Close" wwTransferVFNormalsCloseButton`;
	$clearButton = `button -l  "Clear" wwTransferVFNormalsClearButton`;
	$usageLabel = `text -l "Usage:" -font "boldLabelFont"`;
	$usage = `scrollField -tx "Select the objects you want to transfer from and the objects you want to transfer to. The script will find vertex faces that match the specified threshold and transfer normal information." -ed 0 -ww 1`;
	$labelWidth = 60;
	$buttonWidth = 40;
	$threshold = `floatSliderGrp -field on -label "Threshold" -cw 1 ($labelWidth + 5) -max 1.0 -value 0.0001 -pre 6 -fs 0.0001 wwTransferVFNormalsThreshold`;
	$fromLabel = `text -l "From: " -font "boldLabelFont" -al right -w $labelWidth`;
	$from = `textField wwTransferVFNormalsFrom`;
	$fromButton = `button -l "Get" -w $buttonWidth wwTransferVFNormalsFromButton`;
	$toLabel = `text -l "To: " -font "boldLabelFont" -al right -w $labelWidth`;
	$to = `textField wwTransferVFNormalsTo`;
	$toButton = `button -l "Get" -w $buttonWidth wwTransferVFNormalsToButton`;
	formLayout -e
		-af $transferButton left 0
		-af $transferButton bottom 0
		-ap $transferButton right 0 25
		
		-af $applyButton bottom 0
		-ac $applyButton left 0 $transferButton
		-ap $applyButton right 0 50

		-af $clearButton bottom 0
		-ac $clearButton left 0 $applyButton
		-ap $clearButton right 0 75
		
		-af $closeButton bottom 0
		-ac $closeButton left 0 $clearButton
		-af $closeButton right 0

		-ac $toLabel bottom 10 $transferButton
		-af $toLabel left 0
		-an $toLabel right

		-af $toButton right 0
		-ac $toButton bottom 10 $transferButton
		-an $toButton left

		-ac $to bottom 10 $transferButton
		-ac $to left 5 $toLabel
		-ac $to right 5 $toButton

		-ac $fromLabel bottom 5 $to
		-af $fromLabel left 0
		-an $fromLabel right

		-af $fromButton right 0
		-ac $fromButton bottom 5 $to
		-an $fromButton left

		-ac $from bottom 5 $to
		-ac $from left 5 $fromLabel
		-ac $from right 5 $fromButton

		-af $threshold left 0
		-af $threshold right 0
		-ac $threshold bottom 5 $from

		-af $usageLabel top 0
		-af $usageLabel left 0

		-af $usage left 0
		-af $usage right 0
		-ac $usage top 0 $usageLabel
		-ac $usage bottom 15 $threshold

		$f;
	
}
